trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  # Container registry service connection established during pipeline creation
  imageRepository: 'pythonapp'
  containerRegistry: 'cloudorbit.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'cloudorbit429779af-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to azure container registry
      inputs:
        containerRegistry: 'cloudorbit'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'
    - upload: manifests
      artifact: manifests              
      
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'r4rohanpythonappwithazurekubernetes'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'cloudobrit-cluster'
              namespace: 'cloudobrit-cluster'
              containers: 'cloudobrit'
                           
